2025-09-08 18:02:49.211 +02:00 [INF] Now listening on: https://localhost:7076
2025-09-08 18:02:49.575 +02:00 [INF] Now listening on: http://localhost:5029
2025-09-08 18:02:49.594 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-08 18:02:49.610 +02:00 [INF] Hosting environment: Development
2025-09-08 18:02:49.622 +02:00 [INF] Content root path: C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api
2025-09-08 18:02:54.619 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger - null null
2025-09-08 18:02:54.725 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger - 301 0 null 110.2577ms
2025-09-08 18:02:59.134 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - null null
2025-09-08 18:02:59.870 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 736.6956ms
2025-09-08 18:03:12.855 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=XYZ - null null
2025-09-08 18:03:12.940 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 18:03:13.457 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 18:03:13.743 +02:00 [INF] Executing action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) - Validation state: "Valid"
2025-09-08 18:03:13.779 +02:00 [INF] Recibida solicitud GET con c√≥digos: XYZ
2025-09-08 18:03:15.143 +02:00 [INF] Executed action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1350.9823ms.
2025-09-08 18:03:15.311 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExchangeRateUpdater.Abstractions.Model.ExchangeRate, ExchangeRateUpdater.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-08 18:03:15.511 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 1933.94ms
2025-09-08 18:03:15.627 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 18:03:15.666 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=XYZ - 200 null application/json; charset=utf-8 2810.2417ms
2025-09-08 18:03:40.375 +02:00 [INF] Application is shutting down...
2025-09-08 20:42:51.159 +02:00 [INF] Now listening on: https://localhost:7076
2025-09-08 20:42:51.261 +02:00 [INF] Now listening on: http://localhost:5029
2025-09-08 20:42:51.267 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-08 20:42:51.270 +02:00 [INF] Hosting environment: Development
2025-09-08 20:42:51.273 +02:00 [INF] Content root path: C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api
2025-09-08 20:42:52.266 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger - null null
2025-09-08 20:42:52.340 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger - 301 0 null 79.1746ms
2025-09-08 20:42:52.659 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - null null
2025-09-08 20:42:52.894 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 235.3789ms
2025-09-08 20:43:06.776 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:43:06.835 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:43:06.961 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:43:07.020 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 20.0345ms
2025-09-08 20:43:07.036 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:43:07.057 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api\Middlewares\ExceptionHandlingMiddleware.cs:line 22
2025-09-08 20:43:07.307 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 530.3785ms
2025-09-08 20:46:42.853 +02:00 [INF] Application is shutting down...
2025-09-08 20:46:48.195 +02:00 [INF] Now listening on: https://localhost:7076
2025-09-08 20:46:48.283 +02:00 [INF] Now listening on: http://localhost:5029
2025-09-08 20:46:48.291 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-08 20:46:48.295 +02:00 [INF] Hosting environment: Development
2025-09-08 20:46:48.299 +02:00 [INF] Content root path: C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api
2025-09-08 20:46:48.991 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger - null null
2025-09-08 20:46:49.132 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger - 301 0 null 145.0019ms
2025-09-08 20:46:49.474 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - null null
2025-09-08 20:46:49.826 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 350.7898ms
2025-09-08 20:46:53.162 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:46:53.181 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:46:53.206 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:46:53.224 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 6.6156ms
2025-09-08 20:46:53.230 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:46:53.235 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api\Middlewares\ExceptionHandlingMiddleware.cs:line 22
2025-09-08 20:46:53.308 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 145.6157ms
2025-09-08 20:46:54.358 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:46:54.368 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:46:54.371 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:46:54.374 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 0.6957ms
2025-09-08 20:46:54.379 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:46:54.382 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method9(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api\Middlewares\ExceptionHandlingMiddleware.cs:line 22
2025-09-08 20:46:54.719 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 361.3396ms
2025-09-08 20:49:13.128 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:13.139 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:13.149 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:13.156 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 2.1874ms
2025-09-08 20:49:13.161 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:13.164 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method17(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)
2025-09-08 20:49:13.188 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 59.771ms
2025-09-08 20:49:14.448 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:14.457 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:14.461 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:14.467 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 0.3459ms
2025-09-08 20:49:14.472 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:14.477 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier serviceIdentifier, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method17(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)
2025-09-08 20:49:14.500 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 51.4356ms
2025-09-08 20:49:14.664 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:14.672 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:14.674 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:14.679 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 0.2328ms
2025-09-08 20:49:14.682 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:14.688 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method17(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)
2025-09-08 20:49:14.714 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 50.005ms
2025-09-08 20:49:15.556 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:15.567 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:15.573 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:15.579 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 0.3472ms
2025-09-08 20:49:15.586 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:15.590 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method17(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)
2025-09-08 20:49:15.617 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 60.7057ms
2025-09-08 20:49:15.967 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:15.975 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:15.979 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:15.985 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 0.6496ms
2025-09-08 20:49:15.990 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:15.994 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method17(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)
2025-09-08 20:49:16.015 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 48.2881ms
2025-09-08 20:49:16.095 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:16.102 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:16.105 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:16.113 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 0.2501ms
2025-09-08 20:49:16.120 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:16.123 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method17(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)
2025-09-08 20:49:16.146 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 50.8945ms
2025-09-08 20:49:16.521 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:16.858 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:16.879 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:16.893 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 0.3473ms
2025-09-08 20:49:16.975 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:16.982 +02:00 [ERR] Exception handled in /api/ExchangeRates: InvalidOperationException - A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
System.InvalidOperationException: A suitable constructor for type 'ExchangeRateUpdater.CnbClient.Implementation.HttpExchangeRatesClientStrategy' could not be located. Ensure the type is concrete and all parameters of a public constructor are either registered as services or passed as arguments. Also ensure no extraneous arguments are provided.
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.FindApplicableConstructor(Type instanceType, Type[] argumentTypes, ConstructorInfoEx[] constructors, ConstructorInfo& matchingConstructor, Nullable`1[]& matchingParameterMap)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactoryInternal(Type instanceType, Type[] argumentTypes, ParameterExpression& provider, ParameterExpression& argumentArray, Expression& factoryExpressionBody)
   at Microsoft.Extensions.DependencyInjection.ActivatorUtilities.CreateFactory(Type instanceType, Type[] argumentTypes)
   at System.Threading.LazyInitializer.EnsureInitializedCore[T](T& target, Boolean& initialized, Object& syncLock, Func`1 valueFactory)
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.Cache.get_Activator()
   at Microsoft.Extensions.Http.DefaultTypedHttpClientFactory`1.CreateClient(HttpClient httpClient)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at lambda_method17(Closure, IServiceProvider, Object[])
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass6_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|7_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context)
2025-09-08 20:49:17.272 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 500 null application/json 751.2468ms
2025-09-08 20:49:20.244 +02:00 [INF] Application is shutting down...
2025-09-08 20:49:26.798 +02:00 [INF] Now listening on: https://localhost:7076
2025-09-08 20:49:26.877 +02:00 [INF] Now listening on: http://localhost:5029
2025-09-08 20:49:26.885 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-09-08 20:49:26.889 +02:00 [INF] Hosting environment: Development
2025-09-08 20:49:26.893 +02:00 [INF] Content root path: C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api
2025-09-08 20:49:27.632 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger - null null
2025-09-08 20:49:27.697 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger - 301 0 null 69.2554ms
2025-09-08 20:49:27.719 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger/index.html - null null
2025-09-08 20:49:27.787 +02:00 [ERR] Exception handled in /swagger/index.html: TaskCanceledException - A task was canceled.
System.Threading.Tasks.TaskCanceledException: A task was canceled.
   at System.IO.StreamReader.ReadBufferAsync(CancellationToken cancellationToken)
   at System.IO.StreamReader.ReadToEndAsyncInternal(CancellationToken cancellationToken)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.RespondWithFile(HttpResponse response, String fileName, CancellationToken cancellationToken)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at ExchangeRateUpdater.Api.Middlewares.ExceptionHandlingMiddleware.InvokeAsync(HttpContext context) in C:\Git\developers\jobs\Backend\Task\ExchangeRateUpdater.Api\Middlewares\ExceptionHandlingMiddleware.cs:line 22
2025-09-08 20:49:27.855 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger/index.html - 500 null application/json 136.7221ms
2025-09-08 20:49:28.018 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - null null
2025-09-08 20:49:28.243 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 224.3711ms
2025-09-08 20:49:36.744 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=eur - null null
2025-09-08 20:49:36.780 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:36.860 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:36.979 +02:00 [INF] Executing action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) - Validation state: "Valid"
2025-09-08 20:49:36.999 +02:00 [INF] Requested Get Exchange rates for: eur
2025-09-08 20:49:37.060 +02:00 [INF] Start processing HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:37.074 +02:00 [INF] Sending HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:38.050 +02:00 [INF] Received HTTP response headers after 946.956ms - 200
2025-09-08 20:49:38.064 +02:00 [INF] End processing HTTP request after 1015.68ms - 200
2025-09-08 20:49:38.250 +02:00 [INF] Start processing HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:38.259 +02:00 [INF] Sending HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:38.371 +02:00 [INF] Received HTTP response headers after 98.6301ms - 200
2025-09-08 20:49:38.380 +02:00 [INF] End processing HTTP request after 129.7401ms - 200
2025-09-08 20:49:38.418 +02:00 [INF] Executed action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1407.1276ms.
2025-09-08 20:49:38.461 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExchangeRateUpdater.Abstractions.Model.ExchangeRate, ExchangeRateUpdater.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-08 20:49:38.560 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 1659.2829ms
2025-09-08 20:49:38.600 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:38.647 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=eur - 200 null application/json; charset=utf-8 1903.5011ms
2025-09-08 20:49:48.192 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - null null
2025-09-08 20:49:48.220 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:48.232 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:48.251 +02:00 [INF] Executing action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) - Validation state: "Valid"
2025-09-08 20:49:48.261 +02:00 [INF] Requested Get Exchange rates for: EUR
2025-09-08 20:49:48.272 +02:00 [INF] Start processing HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:48.294 +02:00 [INF] Sending HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:48.571 +02:00 [INF] Received HTTP response headers after 261.267ms - 200
2025-09-08 20:49:48.582 +02:00 [INF] End processing HTTP request after 309.9158ms - 200
2025-09-08 20:49:48.598 +02:00 [INF] Executed action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 336.3392ms.
2025-09-08 20:49:48.655 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExchangeRateUpdater.Abstractions.Model.ExchangeRate, ExchangeRateUpdater.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-08 20:49:48.675 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 428.0849ms
2025-09-08 20:49:48.687 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:48.697 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR - 200 null application/json; charset=utf-8 504.2537ms
2025-09-08 20:49:54.932 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR%2CUSD - null null
2025-09-08 20:49:54.950 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:54.960 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:49:54.983 +02:00 [INF] Executing action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) - Validation state: "Valid"
2025-09-08 20:49:54.994 +02:00 [INF] Requested Get Exchange rates for: EUR,USD
2025-09-08 20:49:55.002 +02:00 [INF] Start processing HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:55.016 +02:00 [INF] Sending HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:49:55.287 +02:00 [INF] Received HTTP response headers after 262.6035ms - 200
2025-09-08 20:49:55.297 +02:00 [INF] End processing HTTP request after 295.2219ms - 200
2025-09-08 20:49:55.310 +02:00 [INF] Executed action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 315.5197ms.
2025-09-08 20:49:55.324 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExchangeRateUpdater.Abstractions.Model.ExchangeRate, ExchangeRateUpdater.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-08 20:49:55.338 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 365.992ms
2025-09-08 20:49:55.350 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:49:55.361 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR%2CUSD - 200 null application/json; charset=utf-8 428.7014ms
2025-09-08 20:50:09.158 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR%2CUSD%2CCZK - null null
2025-09-08 20:50:09.185 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:50:09.205 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:50:09.252 +02:00 [INF] Executing action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) - Validation state: "Valid"
2025-09-08 20:50:09.267 +02:00 [INF] Requested Get Exchange rates for: EUR,USD,CZK
2025-09-08 20:50:09.281 +02:00 [INF] Start processing HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:50:09.292 +02:00 [INF] Sending HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:50:09.576 +02:00 [INF] Received HTTP response headers after 274.4949ms - 200
2025-09-08 20:50:09.590 +02:00 [INF] End processing HTTP request after 309.3923ms - 200
2025-09-08 20:50:09.604 +02:00 [INF] Executed action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 337.2025ms.
2025-09-08 20:50:09.623 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExchangeRateUpdater.Abstractions.Model.ExchangeRate, ExchangeRateUpdater.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-08 20:50:09.639 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 388.3307ms
2025-09-08 20:50:09.649 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:50:09.662 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR%2CUSD%2CCZK - 200 null application/json; charset=utf-8 503.2856ms
2025-09-08 20:50:15.084 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR%2CUSD%2CCZK - null null
2025-09-08 20:50:15.114 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:50:15.124 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:50:15.139 +02:00 [INF] Executing action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) - Validation state: "Valid"
2025-09-08 20:50:15.148 +02:00 [INF] Requested Get Exchange rates for: EUR,USD,CZK
2025-09-08 20:50:15.155 +02:00 [INF] Start processing HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:50:15.165 +02:00 [INF] Sending HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:50:15.834 +02:00 [INF] Received HTTP response headers after 656.2145ms - 200
2025-09-08 20:50:15.848 +02:00 [INF] End processing HTTP request after 692.6524ms - 200
2025-09-08 20:50:15.857 +02:00 [INF] Executed action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 709.3759ms.
2025-09-08 20:50:15.871 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExchangeRateUpdater.Abstractions.Model.ExchangeRate, ExchangeRateUpdater.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-08 20:50:15.892 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 753.6879ms
2025-09-08 20:50:15.908 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:50:15.919 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=EUR%2CUSD%2CCZK - 200 null application/json; charset=utf-8 834.6482ms
2025-09-08 20:50:21.134 +02:00 [INF] Request starting HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=CZK - null null
2025-09-08 20:50:21.157 +02:00 [INF] Executing endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:50:21.166 +02:00 [INF] Route matched with {action = "Get", controller = "ExchangeRates"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[ExchangeRateUpdater.Abstractions.Model.ExchangeRate]]] Get(System.String) on controller ExchangeRateUpdater.Api.Controllers.ExchangeRatesController (ExchangeRateUpdater.Api).
2025-09-08 20:50:21.179 +02:00 [INF] Executing action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) - Validation state: "Valid"
2025-09-08 20:50:21.190 +02:00 [INF] Requested Get Exchange rates for: CZK
2025-09-08 20:50:21.200 +02:00 [INF] Start processing HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:50:21.213 +02:00 [INF] Sending HTTP request GET https://api.cnb.cz/cnbapi/exrates/daily
2025-09-08 20:50:22.720 +02:00 [INF] Received HTTP response headers after 1499.3882ms - 200
2025-09-08 20:50:22.732 +02:00 [INF] End processing HTTP request after 1532.1371ms - 200
2025-09-08 20:50:22.754 +02:00 [INF] Executed action method ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1564.1779ms.
2025-09-08 20:50:22.779 +02:00 [INF] Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[ExchangeRateUpdater.Abstractions.Model.ExchangeRate, ExchangeRateUpdater.Abstractions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-09-08 20:50:22.798 +02:00 [INF] Executed action ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api) in 1620.5175ms
2025-09-08 20:50:22.847 +02:00 [INF] Executed endpoint 'ExchangeRateUpdater.Api.Controllers.ExchangeRatesController.Get (ExchangeRateUpdater.Api)'
2025-09-08 20:50:22.866 +02:00 [INF] Request finished HTTP/2 GET https://localhost:7076/api/ExchangeRates?codes=CZK - 200 null application/json; charset=utf-8 1732.0295ms
2025-09-08 20:50:31.160 +02:00 [INF] Application is shutting down...
